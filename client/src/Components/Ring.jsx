/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Ring.gltf 
*/

import React, { useRef } from 'react';
import { MeshRefractionMaterial, useEnvironment, useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { RGBELoader } from 'three-stdlib';
import { useLoader } from '@react-three/fiber';
import { useConfigurator } from '../Context/Configurator';

export function Ring(props) {
  const { nodes, materials } = useGLTF('./models/Ring.gltf');

  const { diamondsColor, ringMaterial } = useConfigurator();

  // const envMap = useEnvironment({ files: './peppermint_powerplant_2_1k.hdr' });
  // const envMap = useEnvironment({ files: './unfinished_office_1k.hdr' });
  const envMap = useEnvironment({ files: './bathroom_1k.hdr' });

  return (
    <group {...props} dispose={null}>
      <group position={[0, -0.043, -0.093]} rotation={[-1.567, 0.03, -2.467]}>
        <group rotation={[0, 0, 0.9]} scale={1.063}>
          <mesh geometry={nodes.Mesh_3_3.geometry} material={materials['Material_1.003']}>
            <MeshRefractionMaterial envMap={envMap} aberrationStrength={0.01} color={diamondsColor} toneMapped={false} />
          </mesh>
          <mesh geometry={nodes.Mesh_3.geometry} material={nodes.Mesh_3}>
            <MeshRefractionMaterial envMap={envMap} aberrationStrength={0.02} color={diamondsColor} toneMapped={false} />
          </mesh>
          <mesh geometry={nodes.Mesh_3_1.geometry} material={nodes.Mesh_3_1}>
            <MeshRefractionMaterial envMap={envMap} aberrationStrength={0.02} color={diamondsColor} toneMapped={false} />
          </mesh>
          <mesh geometry={nodes.Mesh_3_2.geometry} material={nodes.Mesh_3_2}>
            <MeshRefractionMaterial envMap={envMap} aberrationStrength={0.02} color={diamondsColor} toneMapped={false} />
          </mesh>
          <mesh geometry={nodes.Mesh_3_4.geometry} material={nodes.Mesh_3_4}>
            <MeshRefractionMaterial envMap={envMap} aberrationStrength={0.02} color={diamondsColor} toneMapped={false} />
          </mesh>
          <mesh geometry={nodes.Mesh_3_5.geometry} material={nodes.Mesh_3_5}>
            <MeshRefractionMaterial envMap={envMap} aberrationStrength={0.02} color={diamondsColor} toneMapped={false} />
          </mesh>
          {ringMaterial === 0 && (
            <>
              <mesh geometry={nodes.gold.geometry} material={materials['gold.002']} />
              <mesh geometry={nodes.silver.geometry} material={materials['silver.001']} />
            </>
          )}
          {ringMaterial === 1 && (
            <>
              <mesh geometry={nodes.gold.geometry} material={materials['gold.002']} />
              <mesh geometry={nodes.silver.geometry} material={materials['gold.002']} />
            </>
          )}
          {ringMaterial === 2 && (
            <>
              <mesh geometry={nodes.gold.geometry} material={materials['silver.001']} />
              <mesh geometry={nodes.silver.geometry} material={materials['silver.001']} />
            </>
          )}
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('./models/Ring.gltf');
